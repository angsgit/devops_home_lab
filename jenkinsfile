pipeline {
    agent any

    environment {
        AWS_ACCESS_KEY_ID = credentials('aws-access-key-id') // Reference AWS Access Key
        AWS_SECRET_ACCESS_KEY = credentials('aws-secret-access-key') // Reference AWS Secret Key
        AWS_REGION = credentials ('aws-region') // your AWS region
        BUCKET_NAME = 'angad-dev' // bucket name
    }

    stages {
        stage('Create S3 Bucket') {
            steps {
                sh """
                if ! aws s3api head-bucket --bucket ${BUCKET_NAME} 2>/dev/null; then
                    aws s3api create-bucket --bucket ${BUCKET_NAME} --region ${AWS_REGION} --create-bucket-configuration LocationConstraint=${AWS_REGION}
                    echo "Bucket ${BUCKET_NAME} created successfully."
                else
                    echo "Bucket ${BUCKET_NAME} already exists."
                fi
                """
            }
        }

        stage('Disable Block Public Access') {
            steps {
                sh """
                aws s3api put-public-access-block --bucket ${BUCKET_NAME} \
                    --public-access-block-configuration BlockPublicAcls=false,IgnorePublicAcls=false,BlockPublicPolicy=false,RestrictPublicBuckets=false
                echo "Disabled block public access for bucket ${BUCKET_NAME}."
                """
            }
        }

        stage('Set Bucket Policy') {
            steps {
                sh """
                cat <<EOF > bucket-policy.json
                {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Sid": "PublicReadGetObject",
                      "Effect": "Allow",
                      "Principal": "*",
                      "Action": "s3:GetObject",
                      "Resource": "arn:aws:s3:::${BUCKET_NAME}/*"
                    }
                  ]
                }
                EOF

                aws s3api put-bucket-policy --bucket ${BUCKET_NAME} --policy file://bucket-policy.json
                echo "Bucket policy set for bucket ${BUCKET_NAME}."
                """
            }
        }
    }

    post {
        success {
            echo 'S3 bucket configured successfully!'
        }
        failure {
            echo 'Failed to configure the S3 bucket.'
        }
    }
}