pipeline {
    agent any

    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub')    		// Docker Hub credentials ID in Jenkins
        KUBECONFIG_CREDENTIALS = credentials('kubeconfig')    		// kubeconfig secret file ID in Jenkins
        IMAGE_NAME = "angsdocker/web-app"							//get image from dockerhub
        APP_NAME = "webapp"									// Deployment name from k8s manifest
        KUBE_DEPLOYMENT = "kubernetes/webappv1.yaml"		//k8s deployment manifest location on github
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'master', url: 'https://github.com/angsgit/devops_home_lab.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh 'docker build -t $IMAGE_NAME:$BUILD_NUMBER -f app/Dockerfile app'
                }
        }

        stage('Push to Docker Hub') {
            steps {
                sh '''
                    echo "$DOCKERHUB_CREDENTIALS_PSW" | docker login -u "$DOCKERHUB_CREDENTIALS_USR" --password-stdin
                    docker push $IMAGE_NAME:$BUILD_NUMBER
                    docker tag $IMAGE_NAME:$BUILD_NUMBER $IMAGE_NAME:latest
                    docker push $IMAGE_NAME:latest
                '''
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                withEnv(["KUBECONFIG=${KUBECONFIG_CREDENTIALS}"]) {
                    sh '''
							sed -i "s|image: .*|image: $IMAGE_NAME:$BUILD_NUMBER|g" $KUBE_DEPLOYMENT
							kubectl apply -f $KUBE_DEPLOYMENT -n app-v1
							kubectl rollout status deployment/$APP_NAME -n app-v1

                            echo "üìà Applying monitoring configs..."
                            kubectl apply -f monitoring/prometheus/flaskapp-servicemonitor.yaml -n monitoring
                    '''
                }
            }
        }
    }

    post {
        success {
            echo "‚úÖ Deployment successful!"
        }
        failure {
            echo "‚ùå Deployment failed!"
        }
    }
}
